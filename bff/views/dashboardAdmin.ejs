<div class="container-admin">
    <div class="sidebar">
        <ul class="sidebarList">
            <li class="sidebarItem" data-target="pane-add">Thêm sản phẩm mới</li>
            <li class="sidebarItem" data-target="pane-products">Danh sách sản phẩm</li>
            <li class="sidebarItem" data-target="pane-users">Danh sách người dùng</li>
            <li class="sidebarItem" data-target="pane-logout">Đăng xuất</li>
        </ul>
    </div>
    <div class="content">
        <div class="admin-header">
            <span>Xin chào <%= username %></span>
        </div>
        <!-- Pane 1 -->
        <section id="pane-add" class="pane active">
            <!-- giữ nguyên form Add New Product của bạn -->
            <h1>Thêm sản phẩm mới</h1>

            <form id="add-product-form" action="/products" method="POST">
                <label for="name" class="label-pane">ID sản phẩm:</label>
                <input type="text" name="id" class="input-pane" placeholder="Product ID" required>

                <label for="name" class="label-pane">Tên sản phẩm</label>:</label>
                <input type="text" name="name" class="input-pane" placeholder="Product Name" required>

                <label for="price" class="label-pane">Giá:</label>
                <input type="number" name="price" class="input-pane" placeholder="Product Price" required>

                <label for="origin" class="label-pane">Xuất xứ:</label>
                <input type="text" name="origin" class="input-pane" placeholder="Xuất xứ">

                <label for="description" class="label-pane">Mô tả:</label>
                <textarea name="description" class="input-pane" placeholder="Mô tả sản phẩm"></textarea>

                <label for="image" class="label-pane">Ảnh sản phẩm:</label>
                <input type="file" name="product" class="input-pane" accept="image/*" required>

                <label for="category" class="label-pane">Loại:</label>
                <select name="category" class="input-pane" required>
                    <option value="Cà phê">Cà phê</option>
                    <option value="Trà">Trà</option>
                    <option value="Bánh ngọt">Đồ ăn vặt</option>
                    <option value="Nước ép">Khác</option>
                </select>
                <button type="submit" class="btn-primary btn-admin">Thêm sản phẩm</button>
            </form>
        </section>

        <!-- Pane 2 -->
        <section id="pane-products" class="pane">
            <h1>Sản phẩm</h1>
            <ul class="paneList">
                <% if (products && products.length > 0) { %>
                    <% products.forEach(function(product, index) { %>
                        <li id="product-<% product.id %>" class="paneItem">
                            <span class="Number"><%= (index + 1).toString().padStart(2, '0') %></span>
                            <div class="pane-boxcontent">
                                <div>
                                    <img src="<%= product.image %>" alt="Ảnh sản phẩm" class="pane-product-image" style="width:60px;height:60px;object-fit:cover;margin-right:10px;">
                                </div>
                                <div>
                                    <span class="pane-info">Mã SP: #<%= product.id %></span>
                                    <span class="pane-info">Tên: <%= product.name %></span>
                                    <span class="pane-info">Giá: <%= product.price %>đ</span>
                                    <span class="pane-info">Xuất xứ: <%= product.origin %></span>
                                    <span class="pane-info">Loại: <% product.category %>
                                    <span class="pane-info">Ngày cập nhật: <%= product.updatedAt %></span>
                                    <span class="pane-info">Mô tả: <%= product.description %></span>
                                </div>
                                <span class="pane-delete product-delete" data-id="<% product.id %>">Xóa</span>

                            </div>
                        </li>
                    <% }); %>
                <% } else { %>
                    <li class="paneItem">
                        <span class="pane-info">Không tìm thấy sản phẩm nào.</span>
                    </li>
                <% } %>
            </ul>
        </section>

        <!-- Pane 3 -->
        <section id="pane-users" class="pane">
            <h1>Danh sách người dùng</h1>
            <ul class="paneList">
                <% if (users && users.length > 0) { %>
                    <% users.forEach(function(user, index) { %>
                        <li id="user-<%= user.id %>" class="paneItem">
                            <span class="Number"><%= (index + 1).toString().padStart(2, '0') %></span>
                            <div class="pane-boxcontent">
                                <div>
                                    <span class="pane-info">Email: <%= user.email %></span>
                                    <span class="pane-info">Tên: <%= user.name %></span>
                                    <span class="pane-info">Ngày tạo: <%= user.createdAt %></span>
                                </div>
                                <span class="pane-delete delete-user" data-id="<%= user.id %>">Xóa</span>
                            </div>
                        </li>
                    <% }); %>
                <% } else { %>
                    <li class="paneItem">
                       <span class="pane-info">Không tìm thấy người dùng nào.</span>
                    </li>
                <% } %>
            </ul>
        </section>

        <!-- Pane 4 -->
        <section id="pane-logout" class="pane">
            <h1>Ready to log out?</h1>
            <div class="button">
                <button>Yes</button>
                <button>No</button>
            </div>
        </section>
    </div>
</div>
<script>
    const paneList = document.querySelector('#pane-products .paneList');

    
    document.querySelectorAll('.product-delete').forEach(button => {
        button.addEventListener('click', async () => {
            const productId = button.dataset.id;
            const confirmed = confirm('Bạn có chắc muốn xóa sản phẩm này?');
            if (!confirmed) return;

            try {
            const res = await fetch(`/products/${productId}`, {
                method: 'DELETE',
                headers: { 'Accept': 'application/json' }
            });

            if (!res.ok) {
                const error = await res.json();
                alert(`Error: ${error.error}`);
                return;
            }

            // Expect backend to return { eventId }
            const { eventId } = await res.json();

            // Poll for completion
            let retries = 3;
            let statusData;
            while (retries-- > 0) {
                const statusRes = await fetch(`/status/product-service/${eventId}`);

                if (statusData.status === 'completed') {
                    alert('Xóa sản phẩm thành công!');
                    document.getElementById(`product-${productId}`).remove();
                    return;
                }

                if (statusData.status === 'failed') {
                    alert('Xóa sản phẩm thất bại!');
                    return;
                }

                await new Promise(r => setTimeout(r, 2000)); // wait before retry
            }

            alert('Quá thời gian xử lý! Xin thử lại sau.');

            } catch (err) {
                console.error(err);
                alert('Đã có lỗi xảy ra! Xin thử lại sau~');
            }
        });
    });

    document.getElementById('add-product-form').addEventListener('submit', async (e) => {
        e.preventDefault(); // prevent default form submit

        const form = e.target;
        const formData = new FormData(form);

        try {
            const res = await fetch('/products', {
                method: 'POST',
                body: formData
            });

            if (!res.ok) {
                const error = await res.json();
                alert(`Error: ${error.error}`);
                return;
            }

            const { eventId } = await res.json();

            let retries = 3;
            while (retries-- > 0) {
                const statusRes = await fetch(`/status/product-service/${eventId}`);
                const statusData = await statusRes.json();

                if (statusData.status === 'completed') {
                    form.reset();
                    break;
                }

                if (statusData.status === 'failed') {
                    alert('Thêm sản phẩm thất bại!');
                    return;
                }

                await new Promise(r => setTimeout(r, 2000)); // wait 2s before retry
            }


            if (statusData.status !== 'completed') {
                alert('Quá thời gian xử lý! Xin thử lại sau.');
                return;
            }

            alert('Thêm sản phẩm thành công!');
                const product = statusData.payload.product; // assuming your backend includes new product data here

            if (product) {
            // Create a new product item <li> as in your EJS
            const newItem = document.createElement('li');
            newItem.id = `product-${product.id}`;
            newItem.classList.add('paneItem');

            const index = paneList.children.length + 1;
            newItem.innerHTML = `
                <span class="Number">${index.toString().padStart(2, '0')}</span>
                <div class="pane-boxcontent">
                <div>
                    <img src="${product.image}" alt="Ảnh sản phẩm" class="pane-product-image" style="width:60px;height:60px;object-fit:cover;margin-right:10px;">
                </div>
                <div>
                    <span class="pane-info">Mã SP: #${product.id}</span>
                    <span class="pane-info">Tên: ${product.name}</span>
                    <span class="pane-info">Giá: ${product.price}đ</span>
                    <span class="pane-info">Xuất xứ: ${product.origin}</span>
                    <span class="pane-info">Loại: ${product.category}</span>
                    <span class="pane-info">Ngày cập nhật: ${new Date(product.updatedAt).toLocaleString()}</span>
                    <span class="pane-info">Mô tả: ${product.description}</span>
                </div>
                <span class="pane-delete product-delete" data-id="${product.id}">Xóa</span>
                </div>
            `;

            paneList.appendChild(newItem);

            // Add event listener to the new delete button
            newItem.querySelector('.product-delete').addEventListener('click', async (e) => {
                const confirmed = confirm('Bạn có chắc muốn xóa sản phẩm này?');
                if (!confirmed) return;

                try {
                const res = await fetch(`/products/${product.id}`, { method: 'DELETE', headers: { 'Accept': 'application/json' } });
                if (!res.ok) {
                    const error = await res.json();
                    alert(`Error: ${error.error}`);
                    return;
                }
                    alert('Xóa sản phẩm thành công!');
                    newItem.remove();
                } catch (err) {
                    console.error(err);
                    alert('Đã có lỗi xảy ra! Xin thử lại sau~');
                }
            });

            // Reset form after success
            form.reset();
            }            
        } catch (err) {
            console.error(err);
            alert('Đã có lỗi xảy ra! Xin thử lại sau~');
        }
    })

    document.querySelectorAll('.delete-user').forEach(button => {
        button.addEventListener('click', async (e) => {
            const userId = button.dataset.id;

            const confirmed = confirm('Bạn có chắc muốn xóa người dùng này?');
            if (!confirmed) return;

            try {
                const res = await fetch(`/delete/${userId}`, {
                    method: 'DELETE',
                    headers: {
                        'Accept': 'application/json'
                    }
                });


                if (!res.ok) {
                    const error = await res.json();
                    alert(`Error: ${error.error}`);
                    return;
                }

                // Expect backend to return { eventId }
                const { eventId } = await res.json();

                let retries = 3;
                while (retries-- > 0) {
                    const statusRes = await fetch(`/status/user-service/${eventId}`);
                    const statusData = await statusRes.json();

                    if (statusData.status === 'completed') {
                        alert('Xóa người thành công!');
                        document.getElementById(`user-${productId}`).remove();
                        return;
                    }

                    if (statusData.status === 'failed') {
                        alert('Xóa sản phẩm thất bại!');
                        return;
                    }

                    await new Promise(r => setTimeout(r, 2000)); // wait before retry
                }

                document.getElementById(`user-${userId}`).remove();
            } catch (err) {
                console.error(err);
                alert('Đã có lỗi xảy ra! Xin thử lại sau~');
            }
        });
    });
</script>
